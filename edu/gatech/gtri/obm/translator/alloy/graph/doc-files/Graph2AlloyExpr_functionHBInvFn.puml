@startuml
start
if(//source// is an Instance of ONode) then (yes)
:Get Target Node;
:Add //targetNode// to Visited Nodes;
:Create Optional Edge //oneOfEdges//;
if(//onOfEdges// has a Value) then (yes)
if(//sourceNode// has 1 Entering Edge) then (yes)
:Create OListOR;
:Get Source Node
(API to GraphStream);
while(For Each Edge in the Source Node)
:Get the Edge's Target Node;
if(Current Target Node =! Source Node)
:Add Current Target Node to //visited//;
:Add Current Target Node to //targetOR//;
endif
endwhile
:Put //sourceNode// and //targetOR// in 
IObject Map //hb//;
else(no)
:Create OListOR //sourceOR//;
while(For Each Edge in //targetNode//)
:Get Edge's Source Node
(API to GraphStream);
:Add //targetNode// to //targetOR//;
endwhile
:Put //sourceOR// and //targetNode//
in IObject Map //hb//;
endif
else(no)
if(//targetNode// has 1 Entering Edge) then (yes)
:Get Source Node from //targetNode//;
:Put Source Node and //targetNode// in
IObject Map //hb//;
elseif(//targetNode// has greater than 1 Entering Edges) then (yes)
:Create OListAND //andSource//;
while(For Each Edge in //targetNode//)
:Get Edge's Source Node;
:Add Source Node to //andSource//;
endwhile
:Put //andSource// and //targetNode// in
IObject Map //hb//;
endif
endif
endif
stop
@enduml